// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/application/use_case/post_sorting_algorithm_interface.go
//
// Generated by this command:
//
//	mockgen -source=./internal/application/use_case/post_sorting_algorithm_interface.go -destination=tests/mocks/use_case_post_sorting_algorithm_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	entity "github.com/didiegovieira/go-benchmark-api/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockPostSortingAlgorithmUseCaseInterface is a mock of PostSortingAlgorithmUseCaseInterface interface.
type MockPostSortingAlgorithmUseCaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPostSortingAlgorithmUseCaseInterfaceMockRecorder
}

// MockPostSortingAlgorithmUseCaseInterfaceMockRecorder is the mock recorder for MockPostSortingAlgorithmUseCaseInterface.
type MockPostSortingAlgorithmUseCaseInterfaceMockRecorder struct {
	mock *MockPostSortingAlgorithmUseCaseInterface
}

// NewMockPostSortingAlgorithmUseCaseInterface creates a new mock instance.
func NewMockPostSortingAlgorithmUseCaseInterface(ctrl *gomock.Controller) *MockPostSortingAlgorithmUseCaseInterface {
	mock := &MockPostSortingAlgorithmUseCaseInterface{ctrl: ctrl}
	mock.recorder = &MockPostSortingAlgorithmUseCaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostSortingAlgorithmUseCaseInterface) EXPECT() *MockPostSortingAlgorithmUseCaseInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockPostSortingAlgorithmUseCaseInterface) Execute(arr []int) *entity.Benchmark {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arr)
	ret0, _ := ret[0].(*entity.Benchmark)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockPostSortingAlgorithmUseCaseInterfaceMockRecorder) Execute(arr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockPostSortingAlgorithmUseCaseInterface)(nil).Execute), arr)
}

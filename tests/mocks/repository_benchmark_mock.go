// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/application/repository/benchmark_interface.go
//
// Generated by this command:
//
//	mockgen -source=./internal/application/repository/benchmark_interface.go -destination=tests/mocks/repository_benchmark_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBenchmarkRepositoryInterface is a mock of BenchmarkRepositoryInterface interface.
type MockBenchmarkRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBenchmarkRepositoryInterfaceMockRecorder
}

// MockBenchmarkRepositoryInterfaceMockRecorder is the mock recorder for MockBenchmarkRepositoryInterface.
type MockBenchmarkRepositoryInterfaceMockRecorder struct {
	mock *MockBenchmarkRepositoryInterface
}

// NewMockBenchmarkRepositoryInterface creates a new mock instance.
func NewMockBenchmarkRepositoryInterface(ctrl *gomock.Controller) *MockBenchmarkRepositoryInterface {
	mock := &MockBenchmarkRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockBenchmarkRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBenchmarkRepositoryInterface) EXPECT() *MockBenchmarkRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockBenchmarkRepositoryInterface) Save() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save")
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockBenchmarkRepositoryInterfaceMockRecorder) Save() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockBenchmarkRepositoryInterface)(nil).Save))
}

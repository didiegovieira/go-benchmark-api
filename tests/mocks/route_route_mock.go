// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/route/route_interface.go
//
// Generated by this command:
//
//	mockgen -source=./pkg/route/route_interface.go -destination=tests/mocks/route_route_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	route "github.com/didiegovieira/go-benchmark-api/pkg/route"
	gomock "go.uber.org/mock/gomock"
)

// MockRouteInterface is a mock of RouteInterface interface.
type MockRouteInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRouteInterfaceMockRecorder
}

// MockRouteInterfaceMockRecorder is the mock recorder for MockRouteInterface.
type MockRouteInterfaceMockRecorder struct {
	mock *MockRouteInterface
}

// NewMockRouteInterface creates a new mock instance.
func NewMockRouteInterface(ctrl *gomock.Controller) *MockRouteInterface {
	mock := &MockRouteInterface{ctrl: ctrl}
	mock.recorder = &MockRouteInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouteInterface) EXPECT() *MockRouteInterfaceMockRecorder {
	return m.recorder
}

// GetRoute mocks base method.
func (m *MockRouteInterface) GetRoute() route.Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoute")
	ret0, _ := ret[0].(route.Route)
	return ret0
}

// GetRoute indicates an expected call of GetRoute.
func (mr *MockRouteInterfaceMockRecorder) GetRoute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoute", reflect.TypeOf((*MockRouteInterface)(nil).GetRoute))
}

// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/application/usecase/sorting_algorithm/sorting_algorithms_interface.go
//
// Generated by this command:
//
//	mockgen -source=./internal/application/usecase/sorting_algorithm/sorting_algorithms_interface.go -destination=test/mocks/sorting_algorithm_sorting_algorithms_mock.go -package mocks -mock_names=SortingAlgorithmsInterface=MockSorting_algorithmSortingAlgorithmsInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSorting_algorithmSortingAlgorithmsInterface is a mock of SortingAlgorithmsInterface interface.
type MockSorting_algorithmSortingAlgorithmsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder
}

// MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder is the mock recorder for MockSorting_algorithmSortingAlgorithmsInterface.
type MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder struct {
	mock *MockSorting_algorithmSortingAlgorithmsInterface
}

// NewMockSorting_algorithmSortingAlgorithmsInterface creates a new mock instance.
func NewMockSorting_algorithmSortingAlgorithmsInterface(ctrl *gomock.Controller) *MockSorting_algorithmSortingAlgorithmsInterface {
	mock := &MockSorting_algorithmSortingAlgorithmsInterface{ctrl: ctrl}
	mock.recorder = &MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSorting_algorithmSortingAlgorithmsInterface) EXPECT() *MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockSorting_algorithmSortingAlgorithmsInterface) Execute(arr []int) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arr)
	ret0, _ := ret[0].([]int)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockSorting_algorithmSortingAlgorithmsInterfaceMockRecorder) Execute(arr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockSorting_algorithmSortingAlgorithmsInterface)(nil).Execute), arr)
}

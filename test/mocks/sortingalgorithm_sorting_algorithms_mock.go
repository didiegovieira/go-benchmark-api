// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/application/usecase/sortingalgorithm/sorting_algorithms_interface.go
//
// Generated by this command:
//
//	mockgen -source=./internal/application/usecase/sortingalgorithm/sorting_algorithms_interface.go -destination=test/mocks/sortingalgorithm_sorting_algorithms_mock.go -package mocks -mock_names=SortingAlgorithmsInterface=MockSortingalgorithmSortingAlgorithmsInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSortingalgorithmSortingAlgorithmsInterface is a mock of SortingAlgorithmsInterface interface.
type MockSortingalgorithmSortingAlgorithmsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder
}

// MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder is the mock recorder for MockSortingalgorithmSortingAlgorithmsInterface.
type MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder struct {
	mock *MockSortingalgorithmSortingAlgorithmsInterface
}

// NewMockSortingalgorithmSortingAlgorithmsInterface creates a new mock instance.
func NewMockSortingalgorithmSortingAlgorithmsInterface(ctrl *gomock.Controller) *MockSortingalgorithmSortingAlgorithmsInterface {
	mock := &MockSortingalgorithmSortingAlgorithmsInterface{ctrl: ctrl}
	mock.recorder = &MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSortingalgorithmSortingAlgorithmsInterface) EXPECT() *MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockSortingalgorithmSortingAlgorithmsInterface) Execute(arr []int) []int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arr)
	ret0, _ := ret[0].([]int)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockSortingalgorithmSortingAlgorithmsInterfaceMockRecorder) Execute(arr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockSortingalgorithmSortingAlgorithmsInterface)(nil).Execute), arr)
}
